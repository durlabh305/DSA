//SLIDING WINDOW ALGORITHM APPROACH - Getting MAX SUM OF K ELEMENTS IN ARRAY

import java.util.*;

public class Main {
  
    public static int maxSum(int arr[], int k){
      int n = arr.length;
      int maxsum = 0;
      
      for(int i = 0; i < k; i++){
        maxsum += arr[i];
      }
      
      int windowsumum = maxsum;
      for(int i = k; i < n; i++){
        windowsumum += arr[i] - arr[i - k];
        maxsum = Math.max(windowsumum, maxsum);
      }
      return maxsum;
    }
    
    public static void main(String[] args) {
      int[] arr = {1,4,2,10,2,3,1,0,20};
      int k = 4;
      System.out.println(maxSum(arr, k));
  }
}

//BRUTE FORCE APPROACH - Getting MAX SUM OF K ELEMENTS IN ARRAY

// import java.util.*;

// public class Main {
  
//     public static int maxSum(int arr[], int k){
//       int n = arr.length;
//       int max = Integer.MIN_VALUE;
//       for(int i = 0; i <= n - k; i++){
//         int currSum = 0;
//         for(int j=0; j < k; j++){
//           currSum = currSum + arr[i + j];
//         }
        
//         max = Math.max(currSum, max);
//       }
//       return max;
//     }
//     public static void main(String[] args) {
//       int[] arr = {1,4,2,10,2,3,1,0,20};
//       int k = 4;
//       System.out.println(maxSum(arr, k));
//   }
// }