import java.util.*;

public class Main {
  
    // Method to interleave the first half of the queue with the second half
    public static void interLeave(Queue<Integer> q){
        Queue<Integer> firstHalf = new LinkedList<>(); // Queue to store the first half
        int size = q.size(); // Total size of the original queue
        int fsize = size / 2; // Size of the first half
        
        // Remove the first half elements from the original queue and add them to firstHalf
        for(int i = 0; i < fsize; i++){
            firstHalf.add(q.remove());
        }
        
        // Interleave the elements of firstHalf and the remaining elements in the original queue
        while(!firstHalf.isEmpty()){
            q.add(firstHalf.remove()); // Add element from firstHalf to the original queue
            q.add(q.remove()); // Add the next element from the original queue to the end
        }
    }
    
    public static void main(String[] args) {
        Queue<Integer> q = new LinkedList<>(); // Initialize the queue
        
        // Add elements to the queue
        q.add(1);
        q.add(2);
        q.add(3);
        q.add(4);
        q.add(5);
        q.add(6);
        q.add(7);
        q.add(8);
        q.add(9);
        q.add(10);
        
        // Call the interLeave method to interleave the queue
        interLeave(q);
        
        // Print the interleaved queue
        while(!q.isEmpty()){
            System.out.print(q.remove() + " ");
        }
        System.out.println();
    }
}
