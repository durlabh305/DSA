import java.util.*;

public class Main{
  
  static class Queue{
    static Stack<Integer> s1 = new Stack<>(); // Stack to hold the queue elements
    static Stack<Integer> s2 = new Stack<>(); // Auxiliary stack for reversing order
    
    // Check if the queue is empty
    public static boolean isEmpty(){
      return s1.isEmpty();
    }
    
    // add- O(n) 2 while loop - (n + n = 2n)
    public static void add(int data){
      // s1 ke data ko s2 me push kro
      while(!s1.isEmpty()){
        s2.push(s1.pop());
      }
      
      // s1 me data aane do
      s1.push(data);
      
      // jab tk s2 ka data s1 me na aajaye tb tk s2 ka data s1 me dalo
      while(!s2.isEmpty()){
        s1.push(s2.pop());
      }
    }
    
    // Remove - O(1)
    public static int remove(){
      if(s1.isEmpty()){
        System.out.println("Queue is Empty");
        return -1;
      }
      
      return s1.pop();
    }
    
    // Peek - O(1)
    public static int peek(){
      if(s1.isEmpty()){
        System.out.println("Queue is Empty");
        return -1;
      }
      return s1.peek();
    }
  }
  
  public static void main(String[] args){
    Queue q = new Queue();
    //Queue<Integer> q = new ArrayDeque<>();
    q.add(1);
    q.add(2);
    q.add(3);
    
    while(!q.isEmpty()){
      System.out.println(q.peek());
      q.remove();
    }
  }
}
