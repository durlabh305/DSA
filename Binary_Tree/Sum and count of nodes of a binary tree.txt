// Sum and count of nodes of a binary tree

import java.util.*;

class Main {
    static class Node{
        int data;
        Node left, right;
        
        public Node(int data){
            this.data = data;
            this.left = null;
            this.right = null;
        }
        public static int count(Node newNode){
            if(newNode == null){
                return 0;
            }
            int leftCount = count(newNode.left);
            int rightCount = count(newNode.right);
            return leftCount + rightCount + 1;
        }
        
        public static int sum(Node newNode){
            if(newNode == null){
                return 0;
            }
            int leftsum = sum(newNode.left);
            int rightsum = sum(newNode.right);
            return leftsum + rightsum + newNode.data;
        }
    }
    public static void main(String[] args) {
        Node newNode = new Node(1);
        newNode.left = new Node(2);
        newNode.right = new Node(3);
        newNode.left.left = new Node(4);
        newNode.left.right = new Node(5);
        newNode.right.left = new Node(6);
        newNode.right.right = new Node(7);
        
        System.out.println(Node.count(newNode));
        System.out.println(Node.sum(newNode));
    }
}