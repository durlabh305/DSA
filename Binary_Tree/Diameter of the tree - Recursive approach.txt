// Diameter of the tree - Recursive approach

import java.util.*;

class Main {
    static class Node{
        int data;
        Node left, right;
        
        public Node(int data){
            this.data = data;
            this.left = null;
            this.right = null;
        }
        
        public static int height(Node root){
            if(root == null){
                return 0;
            }
            int lh = height(root.left);
            int rh = height(root.right);
            return Math.max(lh , rh) + 1;
        }
        
        public static int diameter(Node root){
            //TC - O(n^2);
            if(root == null){
                return 0;
            }
            int leftHeight = height(root.left);
            int rightHeight = height(root.right);
            int leftDiam = diameter(root.left);
            int rightDiam = diameter(root.right);
            int selfDiam = leftHeight + rightHeight + 1;
            return Math.max(selfDiam, Math.max(leftDiam, rightDiam));
        }
    }
    public static void main(String[] args) {
        Node root = new Node(1);
        root.left = new Node(2);
        root.right = new Node(3);
        root.left.left = new Node(4);
        root.left.left.left = new Node(9);
        root.left.right = new Node(5);
        root.left.right.right = new Node(6);
        root.left.right.right.right = new Node(7);
        System.out.println(Node.height(root));
        System.out.println(Node.diameter(root));
    }
}